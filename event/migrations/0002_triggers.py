# Generated by Django 5.0.2 on 2024-03-13 07:12

from django.db import migrations


class Migration(migrations.Migration):

    dependencies = [
        ('event', '0001_initial'),
    ]

    operations = [
        migrations.RunSQL(
            sql=
            """
            CREATE OR REPLACE FUNCTION public.available_places_initial_set()
                RETURNS trigger
                LANGUAGE 'plpgsql'
                COST 100
                VOLATILE NOT LEAKPROOF
            AS $BODY$
                        BEGIN
                            IF NEW.available_places IS NULL THEN
                                NEW.available_places := (SELECT places_count FROM event_eventlocation WHERE event_eventlocation.id = NEW.location_id);
                            END IF;
                            RETURN NEW;
                        END;
                        
            $BODY$;
            
            -- FUNCTION: public.update_event_availability()

            CREATE OR REPLACE FUNCTION public.update_event_availability()
                RETURNS trigger
                LANGUAGE 'plpgsql'
                COST 100
                VOLATILE NOT LEAKPROOF
            AS $BODY$
                        BEGIN
                            -- Conditional logic to update is_available.
                            -- Sets is_available to TRUE if the event's date is today or in the future and there are more than 0 available places.
                            -- Sets is_available to FALSE otherwise.
                            UPDATE event_event
                            SET is_available = CASE 
                                                WHEN date >= CURRENT_DATE AND available_places > 0 THEN TRUE
                                                ELSE FALSE
                                            END
                            WHERE id = NEW.id;  -- Applies the update to the event that triggered this function.
                            
                            RETURN NEW; 
                        END;
                        
            $BODY$;
            
            CREATE OR REPLACE TRIGGER event_after_insert_or_update
            AFTER INSERT OR UPDATE OF date, available_places
            ON public.event_event
            FOR EACH ROW
            EXECUTE FUNCTION public.update_event_availability();

            CREATE OR REPLACE TRIGGER update_available_places_initial
            BEFORE INSERT
            ON public.event_event
            FOR EACH ROW
            EXECUTE FUNCTION public.available_places_initial_set();
            """
        )
    ]
