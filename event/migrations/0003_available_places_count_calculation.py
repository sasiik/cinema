# Generated by Django 5.0.2 on 2024-03-06 19:43

from django.db import migrations


class Migration(migrations.Migration):

    dependencies = [
        ('event', '0002_alter_event_location_alter_eventlocation_name_and_more'),
    ]

    operations = [
        migrations.RunSQL(
            sql="""
                ALTER TABLE event_event
                ADD COLUMN available_places INTEGER NOT NULL DEFAULT 0;
                
                CREATE OR REPLACE FUNCTION update_available_places() RETURNS TRIGGER AS $$
                BEGIN
                    UPDATE event_event
                    SET available_places = event_eventlocation.places_count - (
                        SELECT COUNT(*)
                        FROM user_ticket
                        WHERE user_ticket.event_id = NEW.event_id
                    )
                    FROM event_eventlocation
                    WHERE event_event.location_id = event_eventlocation.id AND event_event.id = NEW.event_id;

                    RETURN NEW;
                END;
                $$ LANGUAGE plpgsql;

                CREATE TRIGGER ticket_insert
                AFTER INSERT ON user_ticket
                FOR EACH ROW
                EXECUTE FUNCTION update_available_places();

                CREATE TRIGGER ticket_delete
                AFTER DELETE ON user_ticket
                FOR EACH ROW
                EXECUTE FUNCTION update_available_places();

                CREATE OR REPLACE FUNCTION update_event_availability() RETURNS TRIGGER AS $$
                BEGIN
                    UPDATE event_event
                    SET is_available = FALSE
                    WHERE id = NEW.id AND (date < CURRENT_DATE OR available_places <= 0);

                    RETURN NEW;
                END;
                $$ LANGUAGE plpgsql;
                
                CREATE TRIGGER event_update_after
                AFTER UPDATE ON event_event
                FOR EACH ROW
                EXECUTE FUNCTION update_event_availability();
                
                CREATE TRIGGER ticket_insert_after
                AFTER INSERT ON user_ticket
                FOR EACH ROW
                EXECUTE FUNCTION update_event_availability();

                CREATE TRIGGER ticket_delete_after
                AFTER DELETE ON user_ticket
                FOR EACH ROW
                EXECUTE FUNCTION update_event_availability();
            """
        ),
    ]

